unique.months
?data.frame
unique.months <- data.frame(photo.df$month,photo.df$monthnum, row.names=c("month","monthnum"))
unique.months <- unique(unique.months)
unique.months <- data.frame(photo.df$month,photo.df$monthnum)
unique.months <- unique(unique.months)
unique.months <- unique.months[order(unique.months$photo.df.monthnum)]
unique.months
unique.months$photo.df.monthnum
unique.months <- unique.months$photo.df.monthnum[order(unique.months$photo.df.monthnum)]
unique.months
unique.months <- unique.months[order(unique.months$photo.df.monthnum)]
unique.months <- data.frame(photo.df$month,photo.df$monthnum)
unique.months <- unique(unique.months)
unique.months <- unique.months[order(unique.months$photo.df.monthnum)]
unique.months
unique.months <- photo.df$monthnum
unique.months <- unique(unique.months)
unique.months <- unique.months[order(unique.months)]
unique.months
unique.months <- paste(months[as.numeric(substr(unique.months,6,7))],substr(unique.months,1,4),sep=" ")
unique.months
map <- leaflet(pct) %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
addPolylines (color="red", popup="PCT") %>%
addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=unique.months,
options = layersControlOptions(collapsed=FALSE)
)
for (i in 1:length(photo.df$photo.names)) {
map <- addMarkers(map, lng=photo.df$long[i], lat=photo.df$lat[i], icon=photoIcon, group=photo.df$month[i], popup=
paste(
"<div>",blanks,"</div><div width=300><a target = '_blank' href='photos/",
photo.df$photo.names[i],
"'><img width=100%, height=100% src='photos/",
photo.df$photo.names[i],
"' /></a></div><div>",blanks,"</div>",
sep=""))
}
map
#exporting to html
saveWidget(widget = map, file="index.html", selfcontained = FALSE)
#libaries and data input
library(leaflet)
library(rgdal)
library(maps)
library(htmlwidgets)
#  %>%  pipe operator: cmd-shft-m
# comments: cmd-shfit-c
gpx <- 'data/pacific-crest-trail.gpx'
pct <- readOGR(gpx, layer = "tracks")
#getting picture info
photo.names <- list.files(path="photos")
photo.df=data.frame(photo.names)
exif_time <- function(path) {
exif_cmd <- 'exiftool -T -r -DateTimeOriginal '
cmd <- paste(exif_cmd, '"', path, '"', sep='')
time_inner <- system(cmd, intern = TRUE) # execute exiftool-command
time_inner
}
exif_lat <- function(path) {
exif_cmd <- 'exiftool -T -r -n -GPSLatitude '
cmd <- paste(exif_cmd, '"', path, '"', sep='')
lat_inner <- system(cmd, intern = TRUE) # execute exiftool-command
lat_inner
}
exif_long <- function(path) {
exif_cmd <- 'exiftool -T -r -n -GPSLongitude '
cmd <- paste(exif_cmd, '"', path, '"', sep='')
long_inner <- system(cmd, intern = TRUE) # execute exiftool-command
long_inner
}
for (i in 1:length(photo.df$photo.names)) {
photo.df$time[i] <- exif_time(paste("photos/",photo.df$photo.names[i], sep=""))
photo.df$lat[i] <- as.numeric(exif_lat(paste("photos/",photo.df$photo.names[i], sep="")))
photo.df$long[i] <- as.numeric(exif_long(paste("photos/",photo.df$photo.names[i], sep="")))
}
photo.df
months <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
photo.df$month <- paste(months[as.numeric(substr(photo.df$time,6,7))],substr(photo.df$time,1,4),sep=" ")
photo.df$monthnum <- as.numeric(substr(photo.df$time,1,4)) + (as.numeric(substr(photo.df$time,6,7))/100)
unique.months <- photo.df$monthnum
unique.months <- unique(unique.months)
unique.months <- unique.months[order(unique.months)]
unique.months <- paste(months[as.numeric(substr(unique.months,6,7))],substr(unique.months,1,4),sep=" ")
# creating icon
photoIcon <- makeIcon(
iconAnchorX = 12, iconAnchorY = 12, # center middle of icon on track,
# instead of top corner
iconUrl = "https://www.mapbox.com/maki/renders/camera-12@2x.png"
)
blanks="&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp"
#creating map
# mapStates <- map("state", fill=TRUE,
#                  plot=FALSE,
#                  region=c("California","Oregon","Washington"))
map <- leaflet(pct) %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
addPolylines (color="red", popup="PCT") %>%
addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=unique.months,
options = layersControlOptions(collapsed=FALSE)
)
for (i in 1:length(photo.df$photo.names)) {
map <- addMarkers(map, lng=photo.df$long[i], lat=photo.df$lat[i], icon=photoIcon, group=photo.df$month[i], popup=
paste(
"<div>",blanks,"</div><div width=300><a target = '_blank' href='photos/",
photo.df$photo.names[i],
"'><img width=100%, height=100% src='photos/",
photo.df$photo.names[i],
"' /></a></div><div>",blanks,"</div>",
sep=""))
}
map
?addmarkers()
?addMarkers()
url = "https://github.com/Robinlovelace/sdvwR/raw/master/data/gps-trace.gpx"
download.file(url, destfile = "shef2leeds.gpx", method = "wget")
pct
head()pct
head(pct)
head(pct,10)
pct
map <-addPolyLines(map, long=c(42.36,45.52), long=(-71.05, -122.68))
map <-addPolyLines(map, long=c(42.36,45.52), long=c(-71.05, -122.68))
map <-addPolylines(map, long=c(42.36,45.52), long=c(-71.05, -122.68))
map <-addPolylines(map, lng=c(42.36,45.52), lat=c(-71.05, -122.68))
map
map <-addPolylines(map, lng=c(-71.05, -122.68), lat=c(42.36,45.52))
map
trips <- read.csv("Trips.csv",stringsAsFactors=FALSE, header=TRUE)
trips
map <- leaflet(pct) %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
addPolylines (color="red", popup="PCT") %>%
addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
addPolylines(lng=Trips$Lng, lat=Trips$Lng)
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=unique.months,
options = layersControlOptions(collapsed=FALSE)
)
map <- leaflet(pct) %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
addPolylines (color="red", popup="PCT") %>%
addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=unique.months,
options = layersControlOptions(collapsed=FALSE)
)
map
map <- addPolylines(map,lng=Trips$Lng, lat=Trips$Lat)
Trips$Lng
Trips
trips$Lnd
trips$Lng
map <- addPolylines(map,lng=trips$Lng, lat=trips$Lat)
map
map <- leaflet() %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
#   addPolylines (color="red", popup="PCT") %>%
#   addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=unique.months,
options = layersControlOptions(collapsed=FALSE)
)
map <- addPolylines(map,lng=trips$Lng, lat=trips$Lat)
for (i in 1:length(photo.df$photo.names)) {
map <- addMarkers(map, lng=photo.df$long[i], lat=photo.df$lat[i], icon=photoIcon, group=photo.df$month[i], popup=
paste(
"<div>",blanks,"</div><div width=300><a target = '_blank' href='photos/",
photo.df$photo.names[i],
"'><img width=100%, height=100% src='photos/",
photo.df$photo.names[i],
"' /></a></div><div>",blanks,"</div>",
sep=""))
}
map
#libaries and data input
library(leaflet)
library(rgdal)
library(maps)
library(htmlwidgets)
#  %>%  pipe operator: cmd-shft-m
# comments: cmd-shfit-c
# getting trip info
trips <- read.csv("Trips.csv",stringsAsFactors=FALSE, header=TRUE)
#getting picture info
photo.names <- list.files(path="photos")
photo.df=data.frame(photo.names)
exif_time <- function(path) {
exif_cmd <- 'exiftool -T -r -DateTimeOriginal '
cmd <- paste(exif_cmd, '"', path, '"', sep='')
time_inner <- system(cmd, intern = TRUE) # execute exiftool-command
time_inner
}
exif_lat <- function(path) {
exif_cmd <- 'exiftool -T -r -n -GPSLatitude '
cmd <- paste(exif_cmd, '"', path, '"', sep='')
lat_inner <- system(cmd, intern = TRUE) # execute exiftool-command
lat_inner
}
exif_long <- function(path) {
exif_cmd <- 'exiftool -T -r -n -GPSLongitude '
cmd <- paste(exif_cmd, '"', path, '"', sep='')
long_inner <- system(cmd, intern = TRUE) # execute exiftool-command
long_inner
}
for (i in 1:length(photo.df$photo.names)) {
photo.df$time[i] <- exif_time(paste("photos/",photo.df$photo.names[i], sep=""))
photo.df$lat[i] <- as.numeric(exif_lat(paste("photos/",photo.df$photo.names[i], sep="")))
photo.df$long[i] <- as.numeric(exif_long(paste("photos/",photo.df$photo.names[i], sep="")))
}
photo.df
months <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
photo.df$month <- paste(months[as.numeric(substr(photo.df$time,6,7))],substr(photo.df$time,1,4),sep=" ")
photo.df$monthnum <- as.numeric(substr(photo.df$time,1,4)) + (as.numeric(substr(photo.df$time,6,7))/100)
unique.months <- photo.df$monthnum
unique.months <- unique(unique.months)
unique.months <- unique.months[order(unique.months)]
unique.months <- paste(months[as.numeric(substr(unique.months,6,7))],substr(unique.months,1,4),sep=" ")
# creating icon
photoIcon <- makeIcon(
iconAnchorX = 12, iconAnchorY = 12, # center middle of icon on track,
# instead of top corner
iconUrl = "https://www.mapbox.com/maki/renders/camera-12@2x.png"
)
blanks="&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp"
#creating map
# mapStates <- map("state", fill=TRUE,
#                  plot=FALSE,
#                  region=c("California","Oregon","Washington"))
map <- leaflet() %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
#   addPolylines (color="red", popup="PCT") %>%
#   addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=unique.months,
options = layersControlOptions(collapsed=FALSE)
)
map <- addPolylines(map,lng=trips$Lng, lat=trips$Lat)
for (i in 1:length(photo.df$photo.names)) {
map <- addMarkers(map, lng=photo.df$long[i], lat=photo.df$lat[i], icon=photoIcon, group=photo.df$month[i], popup=
paste(
"<div>",blanks,"</div><div width=300><a target = '_blank' href='photos/",
photo.df$photo.names[i],
"'><img width=100%, height=100% src='photos/",
photo.df$photo.names[i],
"' /></a></div><div>",blanks,"</div>",
sep=""))
}
map
#exporting to html
saveWidget(widget = map, file="index.html", selfcontained = FALSE)
?addPolylines
map <- leaflet() %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
#   addPolylines (color="red", popup="PCT") %>%
#   addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=unique.months,
options = layersControlOptions(collapsed=FALSE)
)
map <- addPolylines(map,lng=trips$Lng, lat=trips$Lat, color="black", opacity=0.3)
map
map <- leaflet() %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
#   addPolylines (color="red", popup="PCT") %>%
#   addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=unique.months,
options = layersControlOptions(collapsed=FALSE)
)
map <- addPolylines(map,lng=trips$Lng, lat=trips$Lat, color="black", opacity=0.3, weight=2)
map
for (i in 1:length(photo.df$photo.names)) {
map <- addMarkers(map, lng=photo.df$long[i], lat=photo.df$lat[i], icon=photoIcon, group=photo.df$month[i], popup=
paste(
"<div>",blanks,"</div><div width=300><a target = '_blank' href='photos/",
photo.df$photo.names[i],
"'><img width=100%, height=100% src='photos/",
photo.df$photo.names[i],
"' /></a></div><div>",blanks,"</div>",
sep=""))
}
map
#exporting to html
saveWidget(widget = map, file="index.html", selfcontained = FALSE)
map <- leaflet() %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
#   addPolylines (color="red", popup="PCT") %>%
#   addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
#   addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=unique.months,
options = layersControlOptions(collapsed=FALSE)
)
map <- addPolylines(map,lng=trips$Lng, lat=trips$Lat, color="black", opacity=0.3, weight=2)
for (i in 1:length(photo.df$photo.names)) {
map <- addMarkers(map, lng=photo.df$long[i], lat=photo.df$lat[i], icon=photoIcon, group=photo.df$month[i], popup=
paste(
"<div>",blanks,"</div><div width=300><a target = '_blank' href='photos/",
photo.df$photo.names[i],
"'><img width=100%, height=100% src='photos/",
photo.df$photo.names[i],
"' /></a></div><div>",blanks,"</div>",
sep=""))
}
map
#exporting to html
saveWidget(widget = map, file="index.html", selfcontained = FALSE)
?delete
?drop
unique.trips <- trips
head(unique.trips)
drop(unique.trips$ID)
head(unique.trips)
unique.trips <- data.frame(unique.trips$City,unique.trips$Lat,unique.trips$Lng)
head(unique.trips)
unique.trips <- data.frame(trips$City,trips$Lat,trips$Lng)
head(unique.trips)
?data.frame
unique.trips <- unique(unique.trips)
unique.trips
length(unique.trips$trips.city)
length(unique.trips$city)
length(unique.trips$trips.City)
length(unique.trips$City)
length(unique.trips$trips.City)
map
for (i in 1:length(unique.trips$trips.City)) {
map <- addMarkers(map, lng=unique.trips$trips.lng[i], lat=unique.trips$trips.lat[i], group=Cities, popup=unique.trips$trips.City[i]
}
for (i in 1:length(unique.trips$trips.City)) {
map <- addMarkers(map, lng=unique.trips$trips.lng[i], lat=unique.trips$trips.lat[i], group=Cities, popup=unique.trips$trips.City[i])
}
for (i in 1:2) {
map <- addMarkers(map, lng=unique.trips$trips.lng[i], lat=unique.trips$trips.lat[i], group=Cities, popup=unique.trips$trips.City[i])
}
unique.trips$trips.lng[1]
unique.trips
for (i in 1:2) {
map <- addMarkers(map, lng=unique.trips$trips.Lng[i], lat=unique.trips$trips.Lat[i], group=Cities, popup=unique.trips$trips.City[i])
}
for (i in 1:2) {
map <- addMarkers(map, lng=unique.trips$trips.Lng[i], lat=unique.trips$trips.Lat[i], group="Cities", popup=unique.trips$trips.City[i])
}
mP
MAP
map
?addMarkers
map <- leaflet() %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
#   addPolylines (color="red", popup="PCT") %>%
#   addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
#   addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=c("Cities","Photos","Paths"),
options = layersControlOptions(collapsed=FALSE)
)
map <- addPolylines(map,lng=trips$Lng, lat=trips$Lat, color="black", opacity=0.3, weight=2, group="Paths")
for (i in 1:length(unique.trips$trips.City)) {
map <- addMarkers(map, lng=unique.trips$trips.Lng[i], lat=unique.trips$trips.Lat[i], group="Cities", popup=unique.trips$trips.City[i])
}
for (i in 1:length(photo.df$photo.names)) {
map <- addMarkers(map, lng=photo.df$long[i], lat=photo.df$lat[i], icon=photoIcon, group="Photos", popup=
paste(
"<div>",blanks,"</div><div width=300><a target = '_blank' href='photos/",
photo.df$photo.names[i],
"'><img width=100%, height=100% src='photos/",
photo.df$photo.names[i],
"' /></a></div><div>",blanks,"</div>",
sep=""))
}
map
cityIcon <- makeIcon(
iconAnchorX = 12, iconAnchorY = 12, # center middle of icon on track,
# instead of top corner
iconUrl = "http://www.capitolscientific.com/core/media/media.nl?id=453195&c=1250437&h=f177909298363d4e354b"
)
map <- leaflet() %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
#   addPolylines (color="red", popup="PCT") %>%
#   addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
#   addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=c("Cities","Photos","Paths"),
options = layersControlOptions(collapsed=FALSE)
)
map <- addPolylines(map,lng=trips$Lng, lat=trips$Lat, color="black", opacity=0.3, weight=2, group="Paths")
for (i in 1:length(unique.trips$trips.City)) {
map <- addMarkers(map, lng=unique.trips$trips.Lng[i], lat=unique.trips$trips.Lat[i], icon=cityIcon, group="Cities", popup=unique.trips$trips.City[i])
}
for (i in 1:length(photo.df$photo.names)) {
map <- addMarkers(map, lng=photo.df$long[i], lat=photo.df$lat[i], icon=photoIcon, group="Photos", popup=
paste(
"<div>",blanks,"</div><div width=300><a target = '_blank' href='photos/",
photo.df$photo.names[i],
"'><img width=100%, height=100% src='photos/",
photo.df$photo.names[i],
"' /></a></div><div>",blanks,"</div>",
sep=""))
}
map
?addMarkers
map <- leaflet() %>%
addProviderTiles("MapBox.ryancook.o8im6llh", group = "Roads") %>%
addProviderTiles("OpenTopoMap", group = "Topo") %>%
addProviderTiles("MapQuestOpen.Aerial", group = "Aerial") %>%
#   addPolylines (color="red", popup="PCT") %>%
#   addPolygons(data=mapStates, stroke=FALSE, fillColor="#373737") %>%
#   addLegend(position="topright",colors="red", labels="PCT", opacity=0.2, title="Trail Map") %>%
#   for (i in 1:length(photo.df$photo.names)) {
#       addMarkers(photo.df$long[i], photo.df$lat[i], icon=photoIcon, group='Photos', popup=photo.df$time[i]) %>%
#   }
addLayersControl(
baseGroups = c("Roads","Topo","Aerial"),
overlayGroups=c("Cities","Photos","Paths"),
options = layersControlOptions(collapsed=FALSE)
)
map <- addPolylines(map,lng=trips$Lng, lat=trips$Lat, color="black", opacity=0.3, weight=2, group="Paths")
for (i in 1:length(unique.trips$trips.City)) {
map <- addCircleMarkers(map, lng=unique.trips$trips.Lng[i], lat=unique.trips$trips.Lat[i], group="Cities", popup=unique.trips$trips.City[i])
}
for (i in 1:length(photo.df$photo.names)) {
map <- addMarkers(map, lng=photo.df$long[i], lat=photo.df$lat[i], icon=photoIcon, group="Photos", popup=
paste(
"<div>",blanks,"</div><div width=300><a target = '_blank' href='photos/",
photo.df$photo.names[i],
"'><img width=100%, height=100% src='photos/",
photo.df$photo.names[i],
"' /></a></div><div>",blanks,"</div>",
sep=""))
}
map
#exporting to html
saveWidget(widget = map, file="index.html", selfcontained = FALSE)
